<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xkYZI &#39;s Blog</title>
  
  <subtitle>欢迎来到我的博客！</subtitle>
  <link href="https://xkyzi.moe/atom.xml" rel="self"/>
  
  <link href="https://xkyzi.moe/"/>
  <updated>2025-03-23T15:51:54.346Z</updated>
  <id>https://xkyzi.moe/</id>
  
  <author>
    <name>xkYZI</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[Vue3+TS]讯飞星火认知大模型搭建demo</title>
    <link href="https://xkyzi.moe/posts/vue3-ts-xun-fei-xing-huo-ren-zhi-da-mo-xing-da-jian-demo/"/>
    <id>https://xkyzi.moe/posts/vue3-ts-xun-fei-xing-huo-ren-zhi-da-mo-xing-da-jian-demo/</id>
    <published>2025-03-23T14:34:57.000Z</published>
    <updated>2025-03-23T15:51:54.346Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>本项目主要采用<font color="#956FE7"> Vue3 + TypeScript + Vite </font>构建</strong></p><p><strong>项目主要依赖：<font color="#4DA8EE">Element-Plus + mitt + Scss + base-64 + crypto-js</font></strong></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>  本项目仅供学习如何使用讯飞星火认知大模型，进行简单的 Web 端页面搭建及基本使用，该 demo 项目具备基本的聊天对话功能，可通过左侧选择不同的助手在右侧窗口进行对话，可供实际开发参考使用。本身这部分内容是在我个人的毕业设计中进行了使用，鉴于有部分朋友向我索要 AI 部分的代码，故在此分享。</p><h1 id="项目链接"><a href="#项目链接" class="headerlink" title="项目链接"></a>项目链接</h1><p><strong>Github 仓库地址：<a href="https://github.com/xkYZI/SparkDemo">GitHub - xkYZI/SparkDemo</a></strong></p><h1 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h1><h2 id="1、路径鉴权"><a href="#1、路径鉴权" class="headerlink" title="1、路径鉴权"></a>1、路径鉴权</h2><figure class="highlight typescript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> base64 <span class="keyword">from</span> <span class="string">"base-64"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CryptoJs</span> <span class="keyword">from</span> <span class="string">"crypto-js"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这里是讯飞星火大模型工作台的个人信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">APPID</span> = <span class="string">"你的APPID"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">APIKey</span> = <span class="string">"你的APIKey"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">APISecret</span> = <span class="string">"你的APISecret"</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 大模型版本对照表</span></span><br><span class="line"><span class="comment"> * 官方文档参考：https://www.xfyun.cn/doc/spark/Web.html#_1-%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E</span></span><br><span class="line"><span class="comment"> *  Spark4.0 Ultra 请求地址：     domain：4.0Ultra      version：v4.0/chat</span></span><br><span class="line"><span class="comment"> *  Spark Max 请求地址：          domain：generalv3.5   version：v3.5/chat</span></span><br><span class="line"><span class="comment"> *  Spark Pro-128K 请求地址：     domain：pro-128k      version：chat/pro-128k</span></span><br><span class="line"><span class="comment"> *  Spark Pro 请求地址：          domain：generalv3     version：v3.1/chat</span></span><br><span class="line"><span class="comment"> *  Spark V2.0 请求地址：         domain：generalv2     version：v2.1/chat</span></span><br><span class="line"><span class="comment"> *  Spark Lite请求地址：          domain：general       version：v1.1/chat</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> domain = <span class="string">"generalv3.5"</span></span><br><span class="line"><span class="keyword">const</span> version = <span class="string">"v3.5/chat"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取鉴权url地址</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getWebsocketUrl</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="comment">//获取鉴权地址</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> {</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">"wss://spark-api.xf-yun.com/"</span> + version;</span><br><span class="line">        <span class="keyword">let</span> host = <span class="string">"spark-api.xf-yun.com"</span>;</span><br><span class="line">        <span class="keyword">let</span> apiKeyName = <span class="string">"api_key"</span>;</span><br><span class="line">        <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toUTCString</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"鉴权url地址"</span>, date);</span><br><span class="line">        <span class="keyword">let</span> algorithm = <span class="string">"hmac-sha256"</span>;</span><br><span class="line">        <span class="keyword">let</span> headers = <span class="string">"host date request-line"</span></span><br><span class="line">        <span class="keyword">let</span> signatureOrigin = <span class="string">`host: <span class="subst">${host}</span>\ndate: <span class="subst">${date}</span>\nGET /`</span> + version + <span class="string">` HTTP/1.1`</span>;</span><br><span class="line">        <span class="keyword">let</span> signatureSha = <span class="title class_">CryptoJs</span>.<span class="title class_">HmacSHA256</span>(</span><br><span class="line">            signatureOrigin,</span><br><span class="line">            <span class="title class_">APISecret</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">let</span> signature = <span class="title class_">CryptoJs</span>.<span class="property">enc</span>.<span class="property">Base64</span>.<span class="title function_">stringify</span>(signatureSha);</span><br><span class="line">        <span class="keyword">let</span> authorizationOrigin = <span class="string">`<span class="subst">${apiKeyName}</span>="<span class="subst">${APIKey}</span>", algorithm="<span class="subst">${algorithm}</span>", headers="<span class="subst">${headers}</span>", signature="<span class="subst">${signature}</span>"`</span>;</span><br><span class="line">        <span class="keyword">let</span> authorization = base64.<span class="title function_">encode</span>(authorizationOrigin);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将空格编码</span></span><br><span class="line">        url = <span class="string">`<span class="subst">${url}</span>?authorization=<span class="subst">${authorization}</span>&amp;date=<span class="subst">${<span class="built_in">encodeURI</span>(</span></span></span><br><span class="line"><span class="subst"><span class="string">            date</span></span></span><br><span class="line"><span class="subst"><span class="string">        )}</span>&amp;host=<span class="subst">${host}</span>`</span>;</span><br><span class="line"></span><br><span class="line">        <span class="title function_">resolve</span>(url);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"鉴权url地址2"</span>, url);</span><br><span class="line">    });</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="2、发送消息开启通信"><a href="#2、发送消息开启通信" class="headerlink" title="2、发送消息开启通信"></a>2、发送消息开启通信</h2><figure class="highlight typescript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送消息</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">sendMsg</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; {</span><br><span class="line">  <span class="comment">//获取请求地址</span></span><br><span class="line">  <span class="keyword">let</span> auUrl = <span class="keyword">await</span> <span class="title function_">getWebsocketUrl</span>();</span><br><span class="line">  <span class="keyword">let</span> socket = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(auUrl <span class="keyword">as</span> <span class="built_in">string</span>);</span><br><span class="line">  <span class="comment">//监听websocket各阶段时间</span></span><br><span class="line">  socket.<span class="title function_">addEventListener</span>(<span class="string">"open"</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> {</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"开启链接"</span>, event);</span><br><span class="line">    <span class="comment">//发送消息</span></span><br><span class="line">    <span class="keyword">const</span> params = {</span><br><span class="line">      <span class="attr">header</span>: {</span><br><span class="line">        <span class="attr">app_id</span>: requestObj.<span class="property">value</span>.<span class="property">APPID</span>,</span><br><span class="line">        <span class="attr">uid</span>: requestObj.<span class="property">value</span>.<span class="property">Uid</span>,</span><br><span class="line">      },</span><br><span class="line">      <span class="attr">parameter</span>: {</span><br><span class="line">        <span class="attr">chat</span>: {</span><br><span class="line">          <span class="attr">domain</span>: domain,</span><br><span class="line">          <span class="attr">temperature</span>: <span class="number">0.5</span>,</span><br><span class="line">          <span class="attr">max_tokens</span>: <span class="number">1024</span>,</span><br><span class="line">        },</span><br><span class="line">      },</span><br><span class="line">      <span class="attr">payload</span>: {</span><br><span class="line">        <span class="attr">message</span>: {</span><br><span class="line">          <span class="comment">//结合上下文回答，将历史问答信息传给服务端</span></span><br><span class="line">          <span class="attr">text</span>: [</span><br><span class="line">            {</span><br><span class="line">              <span class="attr">role</span>: <span class="string">"system"</span>,</span><br><span class="line">              <span class="attr">content</span>: <span class="variable constant_">AI</span>.<span class="property">value</span>.<span class="property">roleDefinitionStatement</span>,</span><br><span class="line">            },</span><br><span class="line">            ...historyList.<span class="property">value</span>,</span><br><span class="line">          ],</span><br><span class="line">        },</span><br><span class="line">      },</span><br><span class="line">    };</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"发送信息"</span>);</span><br><span class="line">    inputValue.<span class="property">value</span> = <span class="string">""</span>;</span><br><span class="line">    isLoading.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">    socket.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(params));</span><br><span class="line">    <span class="comment">// requestObj.sparkResult</span></span><br><span class="line">  });</span><br><span class="line">  socket.<span class="title function_">addEventListener</span>(<span class="string">"message"</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> {</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"接受信息"</span>, event);</span><br><span class="line">    <span class="keyword">let</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(event.<span class="property">data</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    <span class="keyword">const</span> str = data.<span class="property">payload</span>.<span class="property">choices</span>.<span class="property">text</span>[<span class="number">0</span>].<span class="property">content</span>;</span><br><span class="line">    replyContent.<span class="property">value</span> += str.<span class="title function_">replace</span>(<span class="regexp">/\n/g</span>, <span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    <span class="comment">// replyContent.value.replace(/\n/g, "&lt;br&gt;");</span></span><br><span class="line">    <span class="title function_">scrollBottom</span>();</span><br><span class="line">    <span class="keyword">if</span> (data.<span class="property">header</span>.<span class="property">code</span> !== <span class="number">0</span>) {</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"出错了"</span>, data.<span class="property">header</span>.<span class="property">code</span>, <span class="string">":"</span>, data.<span class="property">header</span>.<span class="property">message</span>);</span><br><span class="line">      <span class="comment">// 出错了"手动关闭连接"</span></span><br><span class="line">      socket.<span class="title function_">close</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (data.<span class="property">header</span>.<span class="property">code</span> === <span class="number">0</span>) {</span><br><span class="line">      <span class="comment">// 对话已经完成</span></span><br><span class="line">      <span class="keyword">if</span> (data.<span class="property">payload</span>.<span class="property">choices</span>.<span class="property">text</span> &amp;&amp; data.<span class="property">header</span>.<span class="property">status</span> === <span class="number">2</span>) {</span><br><span class="line">        <span class="comment">//requestObj.sparkResult += data.payload.choices.text[0].content;</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> {</span><br><span class="line">          <span class="comment">// "对话完成，手动关闭连接"</span></span><br><span class="line">          <span class="title function_">reply</span>(replyContent.<span class="property">value</span>);</span><br><span class="line">          <span class="comment">// scrollBottom();</span></span><br><span class="line">          socket.<span class="title function_">close</span>();</span><br><span class="line">        }, <span class="number">1000</span>);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  });</span><br><span class="line">  socket.<span class="title function_">addEventListener</span>(<span class="string">"close"</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> {</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"关闭链接"</span>, event);</span><br><span class="line">    <span class="comment">//对话完成后socket会关闭</span></span><br><span class="line">  });</span><br><span class="line">  socket.<span class="title function_">addEventListener</span>(<span class="string">"error"</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> {</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"错误链接"</span>, event);</span><br><span class="line">  });</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="3、限制历史对话长度"><a href="#3、限制历史对话长度" class="headerlink" title="3、限制历史对话长度"></a>3、限制历史对话长度</h2><figure class="highlight typescript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断历史纪录的长度，如果太长删去前面的一些</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">canAddHistory</span>(<span class="params"></span>) {</span><br><span class="line">  <span class="keyword">let</span> history_length = <span class="number">0</span>;</span><br><span class="line">  historyList.<span class="property">value</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> {</span><br><span class="line">    history_length += item.<span class="property">content</span>.<span class="property">length</span>;</span><br><span class="line">  });</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"当前长度："</span> + history_length);</span><br><span class="line">  <span class="keyword">if</span> (history_length &gt; <span class="number">10000</span>) {</span><br><span class="line">    <span class="comment">//移除五个元素</span></span><br><span class="line">    historyList.<span class="property">value</span>.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="4、页面样例"><a href="#4、页面样例" class="headerlink" title="4、页面样例"></a>4、页面样例</h2><p><img src="/posts/vue3-ts-xun-fei-xing-huo-ren-zhi-da-mo-xing-da-jian-demo/spark-demo.png" alt="spark-demo"></p><h1 id="运行方式"><a href="#运行方式" class="headerlink" title="运行方式"></a>运行方式</h1><p>1、从 GitHub 项目链接下载 <strong><a href="https://github.com/xkYZI/SparkDemo">SparkDemo v1.0</a> 。</strong></p><p>2、在 vscode 或其他编译器中打开本项目。</p><p>3、新建/打开终端。</p><p>4、<strong>首次启动</strong> 需加载项目所需依赖。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></tbody></table></figure><p>5、启动项目。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></tbody></table></figure><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p><strong><font color="red">本项目仅供学习交流使用，不得擅自售卖谋利！</font></strong></p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>部分内容参考了 <a href="https://space.bilibili.com/395361365">B 站：red 润</a>大佬的视频：<br><a href="https://www.bilibili.com/video/BV12V411L7x2/?spm_id_from=333.999.0.0">讯飞星火认知大模型接入网页 demo 演示(项目接入大模型功能)</a><br>最后再次感谢 red 润大佬的无私分享！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="技术分享" scheme="https://xkyzi.moe/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="TypeScript" scheme="https://xkyzi.moe/tags/TypeScript/"/>
    
    <category term="Vue3" scheme="https://xkyzi.moe/tags/Vue3/"/>
    
    <category term="讯飞星火大模型API" scheme="https://xkyzi.moe/tags/%E8%AE%AF%E9%A3%9E%E6%98%9F%E7%81%AB%E5%A4%A7%E6%A8%A1%E5%9E%8BAPI/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to my blog</title>
    <link href="https://xkyzi.moe/posts/hello-world/"/>
    <id>https://xkyzi.moe/posts/hello-world/</id>
    <published>2018-05-06T09:03:12.000Z</published>
    <updated>2025-03-23T14:38:43.334Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>欢迎使用 <code>Kratos : Rebirth</code> 这个我们精心打造的 Hexo 主题！希望能在接下来的旅途中与您相伴，共同创造出更多难以忘怀的美好体验。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="全新体验" scheme="https://xkyzi.moe/categories/%E5%85%A8%E6%96%B0%E4%BD%93%E9%AA%8C/"/>
    
    
    <category term="欢迎" scheme="https://xkyzi.moe/tags/%E6%AC%A2%E8%BF%8E/"/>
    
  </entry>
  
</feed>
